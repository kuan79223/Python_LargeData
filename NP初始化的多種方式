1.針對初始化這部分提供了多種方式:
              不做初始化 - 例如:np.empty((2,4))
              全部規劃為 0 - 例如:np.zeros((3,4))
              全部規劃為 1 - 例如: np.ones((5,2))
              全部規劃/填滿為某數，例如 6 - 例如: np.full((3,3),6)
              建立對角矩陣，對角皆為 1，其他為 0 - 例如: np.eye(3)
              建立對角矩陣，對角為 1,2,3,4，其他為 0 - 例如: np.diag([1,2,3,4])
    2.reshape((x,y)) 這個指令就可以將現有的陣列重新規劃為 x 乘以 y 的陣列。
    3.np.arange(起始值, 結束值, 固定間隔):也是產生一維陣列，
    和 np.array( ) 的差別在於 arange 擁有較大的彈性，而且元素數值是自動化產生。

    4.np.linspace(起始值, 結束值, 起始與結束的區間內要產生幾個元素 ): 
                  只要給定陣列的區間(起始值、結束值)，就可以要求在這個區間內產生幾個元素。
    
    
    arange(a,b,c) - 不包含 b 由 a 開始 以固定間隔 c 來取值
    linspace(a,b,c) - 包含 b 由 a 開始 切割成 c 個資料
    linspace(a,b,c,endpoint=False) - 不包含 b 由 a 開始 切割成 c 
    


***********基本索引和分割**************
import numpy as np

a = np.arange(10)
print(a[5])     #直接座標
print(a[:5])    # [0 1 2 3 4]
print(a[5:8])   # [5 6 7]
a[5:8]=12       # 指定 a 陣列範圍的值為: 12
print(a)        # [ 0  1  2  3  4  12  12  12  8  9]


arr_slice = a[5:8]  #宣告變數 複製 a 陣列片段
#此時arr_slice為新的陣列 ,陣列值為 [12,12,12]
print(arr_slice)
arr_slice[1] = 12345   #index 0,1,2 將arr_slice的index 1設為 12345
print(arr_slice)

arr_slice[:] = 64   #將arr_slice全部的設為64
print(arr_slice)

#明確指定複製陣列
copy_arr = a[1:4].copy()
print(copy_arr)
